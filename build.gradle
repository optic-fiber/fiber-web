plugins {
    id "groovy"
    id "java"
    id "war"
    id "idea"
    id "application"
    id "com.gradle.build-scan" version "2.3"
    id "org.asciidoctor.convert" version "1.5.3"
    id "org.openapi.generator" version "4.0.2"
    id "org.springframework.boot" version "2.1.8.RELEASE"
    id "io.spring.dependency-management" version "1.0.8.RELEASE"
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:$spring_cloud_dependencies_version"
        mavenBom SpringBootPlugin.BOM_COORDINATES
    }
}


import org.springframework.boot.gradle.plugin.SpringBootPlugin

import static org.gradle.api.JavaVersion.VERSION_12

sourceCompatibility = VERSION_12

group "com.cheroliv"
version "0.0.1"

repositories {
    mavenCentral()
    jcenter()
    gradlePluginPortal()
    maven { url "http://repo.spring.io/plugins-release" }
    maven { url 'https://jitpack.io' }
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compile.exclude module: "spring-boot-starter-tomcat"
    compile.exclude group: "com.vaadin.external.google"
    compile.exclude module: "android-json"
}

dependencies {

    //GROOVY LANG
    implementation "org.codehaus.groovy:groovy-all:$groovy_version"

    //POSTGRESQL DRIVER
    runtimeOnly "org.postgresql:postgresql"

    //DEVTOOLS AND IDE HELPER
    developmentOnly "org.springframework.boot:spring-boot-devtools"
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    //BASIC SPRING BOOT STARTER
    implementation "org.springframework.boot:spring-boot-starter-web"

    //UNDERTOW APP SERV
    implementation "org.springframework.boot:spring-boot-starter-undertow"

    //BEAN VALIDATION
    implementation "org.springframework.boot:spring-boot-starter-validation"

    //MAIL
    implementation "org.springframework.boot:spring-boot-starter-mail"
    //THYMELEAF TEMPLATE ENGINE
    implementation "org.springframework.boot:spring-boot-starter-thymeleaf"
    implementation 'org.webjars:bootswatch-spacelab:4.2.1'
    implementation 'org.webjars:jquery:3.4.1'
    implementation 'org.webjars:jquery-ui:1.12.1'
    implementation 'org.webjars.npm:fontawesome:5.6.3'

    //JPA HIBERNATE SPRING DATA
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
//    implementation "org.springframework.boot:spring-boot-starter-data-rest"

    //SPRING SECURITY
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation "org.springframework.security:spring-security-web"
    implementation "org.springframework.security:spring-security-config"
    implementation "org.springframework.security:spring-security-data"
//    testImplementation "org.springframework.security:spring-security-test"


    //HTTP CLIENT LIB
    implementation "org.springframework.cloud:spring-cloud-starter-openfeign"

    //CACHE
    implementation "org.springframework.boot:spring-boot-starter-cache"

    //SPRING MVC PROBLEM HELPER
    implementation "org.zalando:problem-spring-web:$problem_spring_web_version"

    //JSON HELPER
    implementation "io.jsonwebtoken:jjwt-api:$json_web_token_version"
    runtimeOnly "io.jsonwebtoken:jjwt-impl:$json_web_token_version"
    runtimeOnly "io.jsonwebtoken:jjwt-jackson:$json_web_token_version"

    //CLASSE HELPER
    implementation "org.apache.commons:commons-lang3"

    //SWAGGER
    implementation("io.springfox:springfox-swagger2:${swagger_version}") {
        exclude module: "mapstruct"
    }
    implementation "io.springfox:springfox-swagger-ui:${swagger_version}"
    implementation "io.springfox:springfox-bean-validators:${swagger_version}"

    //BEAN MAPPING
    implementation "org.mapstruct:mapstruct:${mapstruct_version}"

    // FILE HELPERS    
    implementation "commons-io:commons-io:$commons_io_version"

    //GROOVY DSL FOR EXCEL
    implementation "com.jameskleeh:excel-builder:$excel_builder_version"

    //JAVA FOR EXCEL
    implementation "org.apache.poi:poi:$poi_version"
    implementation "org.apache.poi:poi-ooxml:$poi_version"

    // TDD:JUNIT SPRING
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    // TDD:JUNIT
    testImplementation "org.junit.jupiter:junit-jupiter-api"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
    testRuntimeOnly "org.junit.vintage:junit-vintage-engine"
    testImplementation "org.junit.jupiter:junit-jupiter-params"
    testImplementation "org.junit.platform:junit-platform-commons"
    testImplementation "org.junit.platform:junit-platform-launcher"
    testCompileOnly "junit:junit"

//    testImplementation "org.springframework.boot:spring-boot-test"
    testImplementation "com.xlson.groovycsv:groovycsv:${groovy_csv_version}"

//    implementation "org.springframework.boot:spring-boot-starter-quartz:$spring_boot_version"
//    implementation "org.springframework.boot:spring-boot-starter-webflux"
//    implementation "org.springframework.boot:spring-boot-starter-websocket"
//    implementation "javax.cache:cache-api:1.1.0"
//    implementation "org.ehcache:ehcache:3.7.1"
//    implementation "org.hibernate:hibernate-jcache"
//    implementation "org.springframework.boot:spring-boot-starter-hateoas"
//    implementation "org.springframework.data:spring-data-rest-hal-browser"
//    implementation "org.springframework.session:spring-session-core"
//    testImplementation "io.projectreactor:reactor-test"
//    testImplementation "org.springframework.restdocs:spring-restdocs-mockmvc"
//    implementation "org.springframework.boot:spring-boot-starter-actuator"
//    testImplementation "de.flapdoodle.embed:de.flapdoodle.embed.mongo"
}


//sourceCompatibility = 1.8
//targetCompatibility = 12

idea {
    module {
        excludeDirs += files("node_modules")
    }
}

springBoot {
    buildInfo()
}

ext {
    set("snippetsDir", file("build/generated-snippets"))
}

test {
    useJUnitPlatform {
        excludeEngines 'junit-vintage'
        includeEngines 'junit-jupiter'
    }
    outputs.dir snippetsDir
}

asciidoctor {
    inputs.dir snippetsDir
    dependsOn test
}

openApiGenerate {
    generatorName = "spring"
    inputSpec = "$rootDir/src/main/resources/swagger/api.yml".toString()
    outputDir = "$buildDir/openapi".toString()
    apiPackage = "com.cheroliv.fiber.web.api"
    modelPackage = "com.cheroliv.fiber.web.api.model"
    apiFilesConstrainedTo = [""]
    modelFilesConstrainedTo = [""]
    supportingFilesConstrainedTo = ["ApiUtil.groovy"]
    configOptions = [delegatePattern: "true", title: "fiber-web"]
    validateSpec = true
    importMappings = [Problem: "org.zalando.problem.Problem"]
}

sourceSets {
    main {
        java { srcDirs = [] }
        groovy {
            srcDirs = [
                    "src/main/java",
                    "src/main/groovy",
                    file("${project.buildDir.path}/openapi/src/main/java")]
        }
    }
    test {
        java { srcDirs = [] }
        groovy { srcDirs = ["src/test/java", "src/test/groovy"] }
    }
}

compileGroovy.dependsOn("openApiGenerate")

import java.nio.file.Paths


task dependencyReportFile(type: DependencyReportTask) {
    String outputFileName = 'dependencies.txt'
    String separator = Paths.get(System.getProperty("user.home"))
            .fileSystem.separator
    File depFile = new File("${rootProject.projectDir}${separator}${outputFileName}".toString())
    !(depFile.exists() && !depFile.directory) ?: depFile.delete()
    outputFile = file(outputFileName)
}